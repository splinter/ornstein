var notify = require('notify');
var dhcLib = require('dhc-lib');
var http =require('http');
exports.run = function(opts){
	var projectName = opts.projectDir;
	var requestList = [];
		
	//Get the request list in the DHC project
	requestList = dhcLib.getRequests(projectName);

	notify.info('Invoking requests defined in the project: '+projectName);
	//Invoke each request and run the associated tests
	requestList.forEach(function(definition,index){
		//Normalize the request definition
		//definition = dhcLib.createRequest(definition);
		//console.log(definition);
		perform(definition,projectName);
	});
};

var perform = function(definition,projectName){
	console.log('request-name: '+definition.name);
	invokeDHCRequest(definition,projectName);
	//invokeDHCTests(definition.name,projectName,definition);
};

var buildRequestOptions = function(definition){
	return {
		method:'get',
		uri:'/api'
	};
};
var printRequestDetails = function(options,definition){
	notify.info(options.method.toUpperCase()+ ' '+options.uri);
	notify.info(JSON.stringify(definition));
	notify.info('*****');
};

var invokeDHCRequest = function(definition,projectName){
	var opts = buildRequestOptions(definition);
	printRequestDetails(opts,definition);
	// var req = http.request(opts,function(response){
	// 	var str = '';
	// 	response.on('data',function(data){
	// 		str+=data;
	// 	});
	// 	response.on('end',function(){
	// 		var input = {};
	// 		input.headers = response.headers;
	// 		input.content = str;
	// 		invokeDHCTests(definition.name,projectName,definition,input);
	// 	});
	// 	response.on('error',function(){
	// 		notify.error('test: '+definition.name+' failed.');
	// 	});
	// });
	// req.end();
};

var invokeDHCTests = function(requestName,projectName,definition,response){
	var results = {};
	var result;
	var scriptName;
	var tests =dhcLib.getTestsForRequest(requestName,projectName);

	tests.forEach(function(testName){
		var scriptPath = '../projects/'+projectName+'/'+testName;
		console.log('test script loaded: '+scriptPath);
		var script = require(scriptPath); 
		executeTestScript(script,definition, response);
	});
	//Get the tests that should be run for this request
	
	//result = executeTestScript(script, req, res);
 	//results[scriptName] = result;
};

var executeTestScript = function(script,req,res) {
	var result ={};
	for(var testName in script){
		if(script.hasOwnProperty(testName)){
			notify.info('Executing test ::  '+testName);
			try{
				script[testName](req,res);
				result[testName] = {};
				result[testName].passed = true;
				notify.success('test: '+testName+ ' passed');
			} catch(e){
				result[testName] = {};
				result[testName].passed = false;
				result[testName].result = e;
				notify.error('test: '+testName+' failed.');
			}
		}
	}
	return result;
};